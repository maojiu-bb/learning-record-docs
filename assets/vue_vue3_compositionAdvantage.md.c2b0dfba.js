import{_ as o,o as t,c as a,V as i}from"./chunks/framework.d844f6b8.js";const s="/learning-record-docs/assets/option1.cd89490b.png",e="/learning-record-docs/assets/option2.3813d7d0.png",n="/learning-record-docs/assets/composition1.237f96c5.png",p="/learning-record-docs/assets/composition2.fd9a8a55.png",I=JSON.parse('{"title":"Compositon API 的优势","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/compositionAdvantage.md","filePath":"vue/vue3/compositionAdvantage.md","lastUpdated":1694581408000}'),c={name:"vue/vue3/compositionAdvantage.md"},r=i('<h1 id="compositon-api-的优势" tabindex="-1">Compositon API 的优势 <a class="header-anchor" href="#compositon-api-的优势" aria-label="Permalink to &quot;Compositon API 的优势&quot;">​</a></h1><h2 id="options-api-存在的问题" tabindex="-1">Options API 存在的问题 <a class="header-anchor" href="#options-api-存在的问题" aria-label="Permalink to &quot;Options API 存在的问题&quot;">​</a></h2><p>使用传统 Options API 中，新增或者修改一个需求，就需要分别在 data，methods，computed 等地方修改。</p><p><img src="'+s+'" alt="options API"></p><hr><p><img src="'+e+'" alt="options API"></p><h2 id="composition-api-的优势" tabindex="-1">Composition API 的优势 <a class="header-anchor" href="#composition-api-的优势" aria-label="Permalink to &quot;Composition API 的优势&quot;">​</a></h2><p>可以更加优雅地组织代码、函数，让相关功能的代码更加有序的组织在一起。说白了就是让同一个功能的代码整合到一起，日后修改代码直接找对应的功能模块。</p><p><img src="'+n+'" alt="composition API"></p><hr><p><img src="'+p+'" alt="composition API"></p>',11),d=[r];function m(_,l,h,A,P,u){return t(),a("div",null,d)}const f=o(c,[["render",m]]);export{I as __pageData,f as default};
