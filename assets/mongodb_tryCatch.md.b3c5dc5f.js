import{_ as s,o as a,c as n,V as l}from"./chunks/framework.d844f6b8.js";const B=JSON.parse('{"title":"try catch","description":"","frontmatter":{},"headers":[],"relativePath":"mongodb/tryCatch.md","filePath":"mongodb/tryCatch.md","lastUpdated":1688790543000}'),p={name:"mongodb/tryCatch.md"},o=l(`<h1 id="try-catch" tabindex="-1">try catch <a class="header-anchor" href="#try-catch" aria-label="Permalink to &quot;try catch&quot;">​</a></h1><p>当一次性插入或者更新 n 条数据时，mongodb 不会因为一条数据的错误而使得整个操作终止并回滚，只会终止接下来的操作，所以可以使用 trycatch 来进行异常的捕捉处理。测试的时候可以不处理。</p><p>例如：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">try</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">db.c1.insertMany([</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">&quot;_id&quot;</span><span style="color:#FFCB6B;">:1,name:</span><span style="color:#FFCB6B;">&quot;xzy&quot;</span><span style="color:#FFCB6B;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">&quot;_id&quot;</span><span style="color:#FFCB6B;">:2,name:</span><span style="color:#FFCB6B;">&quot;lhl&quot;</span><span style="color:#FFCB6B;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">&quot;_id&quot;</span><span style="color:#FFCB6B;">:3,name:</span><span style="color:#FFCB6B;">&quot;yzh&quot;</span><span style="color:#FFCB6B;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">&quot;_id&quot;</span><span style="color:#FFCB6B;">:4,name:</span><span style="color:#FFCB6B;">&quot;lwy&quot;</span><span style="color:#FFCB6B;">}...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  ])</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">catch</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,4),e=[o];function t(c,r,i,F,y,C){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{B as __pageData,d as default};
