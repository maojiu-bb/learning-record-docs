import{_ as e,o as t,c as o,V as c}from"./chunks/framework.d844f6b8.js";const i="/learning-record-docs/assets/git1.87b628b2.png",d="/learning-record-docs/assets/git2.15e4ed85.png",u=JSON.parse('{"title":"Git 葵花宝典 😂","description":"","frontmatter":{},"headers":[],"relativePath":"git/index.md","filePath":"git/index.md","lastUpdated":1694581408000}'),a={name:"git/index.md"},p=c('<h1 id="git-葵花宝典-😂" tabindex="-1">Git 葵花宝典 😂 <a class="header-anchor" href="#git-葵花宝典-😂" aria-label="Permalink to &quot;Git 葵花宝典 😂&quot;">​</a></h1><p>在实际开发中，会使用<code>git</code>作为版本控制工具来完成团队协作。因此，对基本的 git 操作指令进行总结是十分有必要的。</p><p>git 的通用操作流程如下图:</p><p><img src="'+i+'" alt="git"></p><p>主要涉及到四个关键点：</p><p>1.工作区：本地电脑存放项目文件的地方，比如 <code>learnGitProject</code> 文件夹；</p><p>2.暂存区<code>（Index/Stage）</code>：在使用 git 管理项目文件的时候，其本地的项目文件会多出一个<code>.git</code> 的文件夹，将这个<code>.git</code> 文件夹称之为版本库。其中<code>.git </code>文件夹中包含了两个部分，一个是暂存区<code>（Index 或者 Stage）</code>,顾名思义就是暂时存放文件的地方，通常使用 <code>add</code> 命令将工作区的文件添加到暂存区里；</p><p>3.本地仓库：<code>.git</code> 文件夹里还包括 <code>git</code> 自动创建的 <code>master</code> 分支，并且将 <code>HEAD</code> 指针指向 <code>master</code> 分支。使用 <code>commit</code> 命令可以将暂存区中的文件添加到本地仓库中；</p><p>4.远程仓库：不是在本地仓库中，项目代码在远程 <code>git</code> 服务器上，比如项目放在 <code>github</code> 上，就是一个远程仓库，通常使用 <code>clone</code> 命令将远程仓库拷贝到本地仓库中，开发后推送到远程仓库中即可；</p><p><img src="'+d+'" alt="git"></p><p>因此，经过这样的分析，git 命令可以分为这样的逻辑进行理解和记忆：</p><p>1.git 管理配置的命令；</p><p>2.几个核心存储区的交互命令：</p><p>3.工作区与暂存区的交互；</p><p>4.暂存区与本地仓库（分支）上的交互；</p><p>5.本地仓库与远程仓库的交互。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>可以查看这篇文章<a href="https://juejin.cn/post/6844903598522908686" target="_blank" rel="noreferrer">git 基本操作，一篇文章就够了！</a></p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noreferrer">git 官网</a></p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这里的内容摘录自<a href="https://brucecai55520.gitee.io/bruceblogpages/" target="_blank" rel="noreferrer">BruceBlog 的学习记录</a></p></div>',19),s=[p];function r(n,l,g,_,m,h){return t(),o("div",null,s)}const f=e(a,[["render",r]]);export{u as __pageData,f as default};
