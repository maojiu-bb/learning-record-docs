import{_ as e,o as t,c,V as a}from"./chunks/framework.d844f6b8.js";const o="/learning-record-docs/assets/lifecycle1.95ec5090.png",s="/learning-record-docs/assets/lifecycle2.502ec9e7.png",h=JSON.parse('{"title":"vue 生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue2/lifeCycle.md","filePath":"vue/vue2/lifeCycle.md","lastUpdated":1687842821000}'),i={name:"vue/vue2/lifeCycle.md"},l=a('<h1 id="vue-生命周期" tabindex="-1">vue 生命周期 <a class="header-anchor" href="#vue-生命周期" aria-label="Permalink to &quot;vue 生命周期&quot;">​</a></h1><p>vue 生命周期是指一个组件从创建、运行、销毁的整个过程。每个阶段对应着不同的生命周期钩子。</p><p>生命周期钩子也可理解为：Vue 在特定的时刻调用特定的函数。</p><p>除了图中 8 个钩子，还有 <code>nextTick</code>，<code>activated</code>，<code>deactivated</code></p><p>关于销毁过程：</p><ul><li>销毁后借助 Vue 开发者工具看不到任何信息。</li><li>销毁后自定义事件会失效，但原生 DOM 事件依然有效。</li><li>一般不在 beforeDestroy 操作数据，因为即便操作数据，也不会再触发更新流程</li></ul><p><img src="'+o+'" alt="生命周期"><img src="'+s+'" alt="生命周期"></p>',7),r=[l];function d(_,n,p,u,f,v){return t(),c("div",null,r)}const g=e(i,[["render",d]]);export{h as __pageData,g as default};
