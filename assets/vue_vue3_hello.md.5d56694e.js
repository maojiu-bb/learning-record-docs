import{_ as e,o as l,c as i,V as a}from"./chunks/framework.d844f6b8.js";const t="/learning-record-docs/assets/onepiece.3503d5cd.png",f=JSON.parse('{"title":"Hello Vue3","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/hello.md","filePath":"vue/vue3/hello.md","lastUpdated":1687955261000}'),o={name:"vue/vue3/hello.md"},p=a('<h1 id="hello-vue3" tabindex="-1">Hello Vue3 <img src="'+t+'" style="width:30px;display:inline-block;position:relative;top:2px;"> <a class="header-anchor" href="#hello-vue3" aria-label="Permalink to &quot;Hello Vue3 &lt;img src=&quot;/image/onepiece.png&quot; style=&quot;width:30px;display:inline-block;position:relative;top:2px&quot; /&gt;&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue3 官方文档</a></p></div><h2 id="vue3-的变化" tabindex="-1">Vue3 的变化 <a class="header-anchor" href="#vue3-的变化" aria-label="Permalink to &quot;Vue3 的变化&quot;">​</a></h2><h3 id="性能的提升" tabindex="-1">性能的提升 <a class="header-anchor" href="#性能的提升" aria-label="Permalink to &quot;性能的提升&quot;">​</a></h3><ul><li>打包大小减少 41%</li><li>初次渲染快 55%, 更新渲染快 133%</li><li>内存减少 54%</li></ul><h3 id="源码的升级" tabindex="-1">源码的升级 <a class="header-anchor" href="#源码的升级" aria-label="Permalink to &quot;源码的升级&quot;">​</a></h3><ul><li>使用 Proxy 代替 defineProperty 实现响应式</li><li>重写虚拟 DOM 的实现和 Tree-Shaking</li></ul><h3 id="拥抱-typescript" tabindex="-1">拥抱 TypeScript <a class="header-anchor" href="#拥抱-typescript" aria-label="Permalink to &quot;拥抱 TypeScript&quot;">​</a></h3><ul><li>Vue3 可以更好的支持 TypeScript</li></ul><h3 id="新的特性" tabindex="-1">新的特性 <a class="header-anchor" href="#新的特性" aria-label="Permalink to &quot;新的特性&quot;">​</a></h3><p>1.Composition API（组合 API）</p><ul><li><p>setup 配置</p></li><li><p>ref 与 reactive</p></li><li><p>watch 与 watchEffect</p></li><li><p>provide 与 inject</p></li><li><p>......</p><p>2.新的内置组件</p></li><li><p>Fragment</p></li><li><p>Teleport</p></li><li><p>Suspense</p><p>3.其他改变</p></li><li><p>新的生命周期钩子</p></li><li><p>data 选项应始终被声明为一个函数</p></li><li><p>移除 keyCode 支持作为 v-on 的修饰符</p></li><li><p>......</p></li></ul>',12),r=[p];function s(n,c,u,h,d,_){return l(),i("div",null,r)}const v=e(o,[["render",s]]);export{f as __pageData,v as default};
