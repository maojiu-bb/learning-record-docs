import{_ as e,o as t,c as a,V as o}from"./chunks/framework.d844f6b8.js";const x=JSON.parse('{"title":"Vuex 核心概念","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vuex/coreConception.md","filePath":"vue/vuex/coreConception.md","lastUpdated":1687874672000}'),i={name:"vue/vuex/coreConception.md"},l=o('<h1 id="vuex-核心概念" tabindex="-1">Vuex 核心概念 <a class="header-anchor" href="#vuex-核心概念" aria-label="Permalink to &quot;Vuex 核心概念&quot;">​</a></h1><h2 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h2><ul><li>Vuex 管理的状态对象</li><li>唯一的</li></ul><h2 id="actions" tabindex="-1">actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;actions&quot;">​</a></h2><ul><li>值为一个对象，包含多个响应用户动作的回调函数</li><li>通过 commit()触发 mutation 中函数的调用，间接更新 state</li><li>可包含异步代码</li></ul><h2 id="mutations" tabindex="-1">mutations <a class="header-anchor" href="#mutations" aria-label="Permalink to &quot;mutations&quot;">​</a></h2><ul><li>值为一个对象，包含多个直接更新 state 的方法</li><li>不能写异步代码，只能单纯地操作 state</li></ul><h2 id="getters" tabindex="-1">getters <a class="header-anchor" href="#getters" aria-label="Permalink to &quot;getters&quot;">​</a></h2><ul><li>值为一个对象，包含多个用于返回数据的函数</li><li>类似于计算属性，getters 返回的数据依赖于 state 的数据</li></ul><h2 id="modules" tabindex="-1">modules <a class="header-anchor" href="#modules" aria-label="Permalink to &quot;modules&quot;">​</a></h2><ul><li>一个 module 是一个 store 的配置对象，与一个组件对应</li></ul>',11),s=[l];function r(n,u,c,d,h,m){return t(),a("div",null,s)}const p=e(i,[["render",r]]);export{x as __pageData,p as default};
